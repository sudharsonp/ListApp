{"version":3,"sources":["popup.js","App.js","reportWebVitals.js","index.js"],"names":["Popup","props","handleChange","event","element","setState","target","value","addComment","d","Date","state","currentComment","comment","date","toDateString","comments","concat","deleteCard","category","addCard","updateCard","data","name","cardDesc","commentList","this","map","index","className","onClick","closePopup","htmlFor","type","id","onChange","e","Component","AppTaskList","tasks","task1","bgcolor","task2","currentCategory","showPopup","currentCardData","togglePopup","onDragStart","ev","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","destinationCat","destinationObject","sourceName","getData","soruceCat","sourceIndex","findArrayIndex","destinationIndex","sourceList","swap","addObject","find","task","removeByAttr","destinationList","addByAttr","stopPropagation","catagory","oldName","arr","attr","splice","findIndex","o","x","y","addSourceValue","length","addList","lastTask","Object","keys","forEach","i","replace","parseInt","deleteList","card","push","draggable","categoryList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1419493a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class Popup extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    const { name = '', cardDesc = '', currentComment = '', comments = [] } = props.data\r\n    this.state = {\r\n      name,\r\n      cardDesc,\r\n      currentComment,\r\n      comments,\r\n      category: props.category\r\n    }\r\n  }\r\n\r\n  handleChange = (event, element) => {\r\n    this.setState({ [element]: event.target.value })\r\n  }\r\n\r\n  addComment = () => {\r\n    const d = new Date()\r\n    if (this.state.currentComment) {\r\n      const comment = {\r\n        comment: this.state.currentComment,\r\n        date: d.toDateString()\r\n      }\r\n      this.setState({\r\n        currentComment: '',\r\n        comments: this.state.comments.concat(comment)\r\n      })\r\n    }\r\n  }\r\n\r\n  deleteCard = () => {\r\n    this.props.deleteCard(this.props.category, this.state)\r\n  }\r\n\r\n  addCard = () => {\r\n    this.props.addCard(this.props.category, this.state)\r\n  }\r\n\r\n  updateCard = () => {\r\n    this.props.updateCard(this.props.category, this.state, this.props.data.name)\r\n  }\r\n\r\n  render () {\r\n    const commentList = this.state.comments.map((data, index) =>\r\n        <li key={index}>{data.comment} {data.date}</li>\r\n    )\r\n    return (\r\n        <div className='popup'>\r\n          <div className='popup_inner'>\r\n          <button onClick={this.props.closePopup}>close me</button>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">\r\n                        <label htmlFor=\"name\">Card Name:</label>\r\n                    </div>\r\n                    <div className=\"col-50\">\r\n                        <input type=\"text\"\r\n                        id=\"name\"\r\n                        name='name'\r\n                        value={this.state.name}\r\n                        onChange={(e) => this.handleChange(e, 'name')}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-25\">\r\n                        <button onClick={this.deleteCard}>Delete card</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">\r\n                        <label htmlFor=\"cardDesc\">Card Description:</label>\r\n                    </div>\r\n                    <div className=\"col-50\">\r\n                        <textarea\r\n                        id=\"cardDesc\"\r\n                        name=\"cardDesc\"\r\n                         value={this.state.cardDesc}\r\n                         onChange={(e) => this.handleChange(e, 'cardDesc')}\r\n                         />\r\n                    </div>\r\n                    <div className=\"col-25\">\r\n                        {this.props.data.name\r\n                          ? <button onClick={this.updateCard}>update card</button>\r\n                          : <button onClick={this.addCard}>Add card</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">\r\n                        <label htmlFor=\"cardComment\">Card comment:</label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                        <input type=\"text\"\r\n                        id=\"cardComment\"\r\n                        name='cardComment'\r\n                        value={this.state.currentComment}\r\n                        onChange={(e) => this.handleChange(e, 'currentComment')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button onClick={this.addComment}>Add comment</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <ul className=\"col-50\">\r\n                     {commentList}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nPopup.propTypes = {\r\n  closePopup: PropTypes.func,\r\n  data: PropTypes.object,\r\n  deleteCard: PropTypes.func,\r\n  addCard: PropTypes.func,\r\n  updateCard: PropTypes.func,\r\n  category: PropTypes.string\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Popup } from './popup'\r\nimport './App.css'\r\n\r\nexport default class AppTaskList extends Component {\r\n  state = {\r\n    tasks: {\r\n      task1: [\r\n        { name: 'Learn Angular', category: 'task1', bgcolor: 'yellow' },\r\n        { name: 'React', category: 'task1', bgcolor: 'pink' }\r\n      ],\r\n      task2: [\r\n        { name: 'Vue', category: 'task2', bgcolor: 'skyblue' }\r\n      ]\r\n    },\r\n    currentCategory: '',\r\n    showPopup: false,\r\n    currentCardData: {}\r\n  }\r\n\r\n  togglePopup = (category, element) => {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup,\r\n      currentCategory: category,\r\n      currentCardData: element\r\n    })\r\n  }\r\n\r\n  onDragStart = (ev, element) => {\r\n    console.log('drag start', element)\r\n    ev.dataTransfer.setData('name', element.name)\r\n    ev.dataTransfer.setData('cat', element.category)\r\n  }\r\n\r\n  onDragOver = (ev) => {\r\n    ev.preventDefault()\r\n  }\r\n\r\n  onDrop = (ev, destinationCat, destinationObject) => {\r\n    const sourceName = ev.dataTransfer.getData('name')\r\n    const soruceCat = ev.dataTransfer.getData('cat')\r\n\r\n    if (soruceCat === destinationCat) {\r\n      const sourceIndex = this.findArrayIndex(this.state.tasks[soruceCat], 'name', sourceName)\r\n      const destinationIndex = this.findArrayIndex(this.state.tasks[soruceCat], 'name', destinationObject.name)\r\n      const sourceList = this.swap([...this.state.tasks[soruceCat]], sourceIndex, destinationIndex)\r\n      this.setState({\r\n        ...this.state,\r\n        tasks: {\r\n          ...this.state.tasks,\r\n          [soruceCat]: [...sourceList]\r\n        }\r\n      })\r\n    } else {\r\n      const addObject = this.state.tasks[soruceCat].find((task) => task.name === sourceName)\r\n      const sourceList = this.removeByAttr([...this.state.tasks[soruceCat]], 'name', sourceName)\r\n      const destinationList = this.addByAttr(\r\n        soruceCat === destinationCat ? [...sourceList] : [...this.state.tasks[destinationCat]],\r\n        'name',\r\n        destinationObject,\r\n        { ...addObject, category: destinationCat }\r\n      )\r\n\r\n      this.setState({\r\n        ...this.state,\r\n        tasks: {\r\n          ...this.state.tasks,\r\n          [soruceCat]: [...sourceList],\r\n          [destinationCat]: [...destinationList]\r\n        }\r\n      })\r\n    }\r\n    ev.stopPropagation()\r\n  }\r\n\r\n  deleteCard = (catagory, data) => {\r\n    const sourceList = this.removeByAttr([...this.state.tasks[catagory]], 'name', data.name)\r\n    this.setState({\r\n      ...this.state,\r\n      tasks: {\r\n        ...this.state.tasks,\r\n        [catagory]: [...sourceList]\r\n      },\r\n      showPopup: !this.state.showPopup\r\n    })\r\n  }\r\n\r\n  addCard = (category, data) => {\r\n    const alreadyInserted = this.findArrayIndex([...this.state.tasks[category]], 'name', data.name)\r\n    if (alreadyInserted === -1) {\r\n      const destinationList = this.addByAttr(\r\n        [...this.state.tasks[category]],\r\n        'name', '',\r\n        { ...data, category: category }\r\n      )\r\n      this.setState({\r\n        ...this.state,\r\n        tasks: {\r\n          ...this.state.tasks,\r\n          [category]: [...destinationList]\r\n        },\r\n        showPopup: !this.state.showPopup\r\n      })\r\n    }\r\n  }\r\n\r\n  updateCard = (category, data, oldName) => {\r\n    const index = this.findArrayIndex([...this.state.tasks[category]], 'name', oldName)\r\n    const sourceList = [...this.state.tasks[category]]\r\n    sourceList[index] = data\r\n    this.setState({\r\n      ...this.state,\r\n      tasks: {\r\n        ...this.state.tasks,\r\n        [category]: [...sourceList]\r\n      },\r\n      showPopup: !this.state.showPopup\r\n    })\r\n  }\r\n\r\n  removeByAttr = (arr, attr, value) => {\r\n    const index = this.findArrayIndex(arr, attr, value)\r\n    if (index !== -1) arr.splice(index, 1)\r\n    return arr\r\n  }\r\n\r\n  findArrayIndex = (arr, attr, value) => {\r\n    const index = arr.findIndex(function (o) {\r\n      return o[attr] === value\r\n    })\r\n    return index\r\n  }\r\n\r\n  swap = (arr, x, y) => {\r\n    const swap = arr[y]\r\n    arr[y] = arr[x]\r\n    arr[x] = swap\r\n    return arr\r\n  }\r\n\r\n  addByAttr = (arr, attr, value, addSourceValue) => {\r\n    const index = this.findArrayIndex(arr, attr, value)\r\n    if (index !== -1) {\r\n      arr.splice(index, 0, addSourceValue)\r\n    } else {\r\n      arr.splice(arr.length, 0, addSourceValue)\r\n    }\r\n\r\n    return arr\r\n  }\r\n\r\n  addList = () => {\r\n    let lastTask\r\n    Object.keys(this.state.tasks).forEach((category, i) => { lastTask = category.replace(/[^0-9]/g, '') })\r\n    this.setState({\r\n      ...this.state,\r\n      tasks: {\r\n        ...this.state.tasks,\r\n        [`task${parseInt(lastTask || 0) + 1}`]: []\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteList = (category) => {\r\n    const tasks = { ...this.state.tasks }\r\n    delete tasks[category]\r\n    this.setState({\r\n      ...this.state,\r\n      tasks\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const tasks = { }\r\n    Object.keys(this.state.tasks).forEach((category, i) => {\r\n      tasks[category] = []\r\n      this.state.tasks[category].forEach((card) => {\r\n        tasks[category].push(\r\n          <div\r\n            key={card.name}\r\n            onDragStart={(e) => this.onDragStart(e, card)}\r\n            onDrop={(e) => { this.onDrop(e, category, card) }}\r\n            draggable\r\n            className=\"draggable\"\r\n            onClick={(e) => this.togglePopup(category, card)}\r\n          >\r\n            {card.name}\r\n          </div>\r\n        )\r\n      })\r\n    })\r\n\r\n    const categoryList = []\r\n    Object.keys(this.state.tasks).forEach((category, i) => {\r\n      categoryList.push(\r\n         <div className=\"list\" onDragOver={(e) => this.onDragOver(e)} onDrop={(e) => { this.onDrop(e, category) }}>\r\n             <span className=\"task-header\">{category}</span> {tasks[category]}\r\n             <button onClick={(e) => this.togglePopup(category, {})}>Add card</button>\r\n             <button onClick={(e) => this.deleteList(category)}>Delete List</button>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"container-drag\">\r\n         {categoryList}\r\n         <button onClick={this.addList}>Add list</button>\r\n         {this.state.showPopup &&\r\n           <Popup\r\n            data={this.state.currentCardData}\r\n            closePopup={this.togglePopup}\r\n            deleteCard={this.deleteCard}\r\n            addCard={this.addCard}\r\n            updateCard={this.updateCard}\r\n            category={this.state.currentCategory}\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}